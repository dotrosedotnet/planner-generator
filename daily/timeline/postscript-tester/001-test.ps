%!PS
%%BoundingBox: 0 0 297 420
%%Pages: 1
%%Page: 1 1

%TODO: grid width can be determined by minimum-margins and minimum-row-length

% creates mm unit
/mm {72 mul 25.4 div} def

% page dimensions
/page-width 297 def % same as BoundingBox
/page-height 420 def % same as BoundingBox

% line features
/linewidth 0.8 def
[0.01 3] 0 setdash

% timeline hours and hour markings
/hours 26 def
/hour-marking-frequency 3 def
/squares-per-hour 1 def
/first-hour 2 def
/first-hour-marking 3 def

% cell dimensions
/cell-height 3.5 mm def
/cell-width 3.5 mm def

% grid size
/max-width-grid 0 def % if max-width is set to 1, grid-left-margin-size is set to grid-minimum-left-margin
/grid-minimum-left-margin 4 mm def
% /grid-maximum-left-margin 4 mm def
/grid-minimum-right-margin 4 mm def
% /grid-maximum-right-margin 4 mm def

% grid placement on page
/center-horizontally 0 def % set to 1 to center grid on page
/grid-top-margin-size 10 def
/grid-top-margin {page-height grid-top-margin-size sub} def
/grid-height {
  cell-height hours squares-per-hour mul mul
} def
/grid-bottom {
  grid-top-margin grid-height sub
} def
% squares-wide and grid-width must take left-margin into account
/squares-wide { % how many squares can fit horizontally on the page
  page-width grid-minimum-left-margin sub grid-minimum-right-margin sub cell-width div ceiling
  % 85
} def
/total-side-margin {
  max-grid-width 1 eq
  {
    grid-minimum-left-margin grid-minimum-right-margin add
  }
  {
    grid-maximum-left-margin grid-maximum-right-margin add
  } ifelse
}
/grid-width {
  page-width total-side-margin sub
  % squares-wide cell-width mul
} def
/side-margin-total-maximum {
  page-width grid-width sub
} def
/grid-left-margin-size 15 mm def
/grid-left-margin-size-for-centering {
  side-margin-total-maximum 2 div cvi
} def
/grid-left-margin {
  max-width-grid 1 eq
  {
    grid-minimum-left-margin
  }
  {
    center-horizontally 1 eq
    {
      grid-left-margin-size-for-centering
    }
    {
      grid-left-margin-size
    }
    ifelse
  }
  ifelse
} def


% let's draw
/first-vertical-line {
  newpath
  grid-left-margin grid-top-margin moveto
  grid-left-margin grid-bottom lineto
  linewidth setlinewidth 1 setlinecap
  stroke
} def
first-vertical-line

% draw the rest of the vertical lines
/vertical-line-x grid-left-margin cell-width add def
vertical-line-x cell-width grid-width {
  newpath
  vertical-line-x grid-top-margin moveto
  vertical-line-x grid-bottom lineto
  stroke
  /vertical-line-x vertical-line-x cell-width add def
} for
showpage
%%EOF
